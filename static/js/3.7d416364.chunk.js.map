{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/User/User.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/User/User.jsx","components/Dialogs/User/UserContainer.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","styles","item","message","AddMessageForm","initialValues","email","password","isSubmitting","onSubmit","handleSubmit","message_area","name","component","Textarea","placeholder","onClick","onSendMessage","User","avatar","src","alt","values","sendMessage","newMessageText","UserContainer","connect","state","dialogsPage","dispatch","setActive","isActive","activeLink","Link","DialogItem","path","id","dialog","to","Dialogs","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","compose","withAuthNavigate"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,0B,oBCA3GD,EAAOC,QAAU,CAAC,KAAO,wB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,qBAAqB,aAAe,6B,oBCAzFD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,KAAO,yBAAyB,WAAa,iC,4FCQpFC,EANC,SAACC,GACd,OACG,qBAAKC,UAAWC,IAAOC,KAAvB,SAA8BH,EAAMI,W,0CCOpCC,EAAiB,SAACL,GACtB,OACE,cAAC,IAAD,CACEM,cAAe,CAAEC,MAAO,GAAIC,SAAU,IADxC,SAIG,cAAGC,aAAH,OACC,eAAC,IAAD,CAAMC,SAAUV,EAAMW,aAAcV,UAAWC,IAAOU,aAAtD,UACE,cAAC,IAAD,CACEC,KAAK,iBACLC,UAAWC,WACXC,YAAa,wGAIf,8BACE,wBAAQC,QAASjB,EAAMkB,cAAvB,6EA0BGC,EAlBF,SAACnB,GAKZ,OACE,sBAAKC,UAAWC,IAAOC,KAAvB,UACE,qBACEF,UAAWC,IAAOkB,OAClBC,IAAI,uDACJC,IAAI,KAEN,cAAC,EAAD,CAAgBZ,SAXA,SAACa,GACnBvB,EAAMwB,YAAYD,EAAOE,mBAWvB,qBAAKxB,UAAWC,IAAOU,mB,OC3Bdc,EAFOC,aAdA,SAACC,GACrB,MAAO,CACLH,eAAgBG,EAAMC,YAAYJ,mBAIb,SAACK,GACxB,MAAO,CACLN,YAAa,SAACC,GACZK,EAASN,YAAYC,QAKLE,CAA6CR,G,yBChB7DY,EAAY,SAAC,GAAD,SAAGC,SACR9B,IAAO+B,WAAa/B,IAAOgC,MAazBC,EAXI,SAACnC,GAClB,IAAIoC,EAAO,YAAcpC,EAAMqC,GAC/B,OACE,qBAAKpC,UAAWC,IAAOoC,OAAvB,SACE,cAAC,IAAD,CAASC,GAAIH,EAAMnC,UAAW8B,EAA9B,SACG/B,EAAMa,UCMA2B,EAZC,SAACxC,GACf,IAAIyC,EAAkBzC,EAAM4B,MAAMc,QAAQC,KAAI,SAACC,GAAD,OAAO,cAAC,EAAD,CAAY/B,KAAM+B,EAAE/B,KAAMwB,GAAIO,EAAEP,QACjFQ,EAAmB7C,EAAM4B,MAAMkB,SAASH,KAAI,SAACI,GAAD,OAAO,cAAC,EAAD,CAAS3C,QAAS2C,EAAE3C,aAC3E,OACE,sBAAKH,UAAWC,IAAOwC,QAAvB,UACE,qBAAKzC,UAAWC,IAAO8C,aAAvB,SAAsCP,IACtC,cAAC,EAAD,IACA,qBAAKxC,UAAU,WAAf,SAA2B4C,Q,gBCFlBI,sBACbtB,aAPoB,SAACC,GACrB,MAAO,CACLA,MAAOA,EAAMC,gBAMfqB,IAFaD,CAGbT","file":"static/js/3.7d416364.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1CpNI\",\"dialogsItems\":\"Dialogs_dialogsItems__2BoCf\",\"dialog\":\"Dialogs_dialog__1rwQe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Message_item__27BAq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"User_item__GViAQ\",\"avatar\":\"User_avatar__2Co67\",\"message_area\":\"User_message_area__2ZpGu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__1Q3Xp\",\"Link\":\"DialogItem_Link__3btdq\",\"activeLink\":\"DialogItem_activeLink__kZISL\"};","import React from 'react'\r\nimport styles from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n   return(\r\n      <div className={styles.item}>{props.message}</div>\r\n   )\r\n}\r\n\r\nexport default Message","import React from \"react\";\r\nimport styles from \"./User.module.css\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { Textarea } from \"../../Common/FormsControls/FormsControls\";\r\n\r\n/*import { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n  minLengthCreator,\r\n} from \"./../../../utils/validators/index\";*/\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\" }}\r\n      /*validate={[required, maxLengthCreator(10), minLengthCreator(1)]}*/\r\n    >\r\n      {({ isSubmitting }) => (\r\n        <Form onSubmit={props.handleSubmit} className={styles.message_area}>\r\n          <Field\r\n            name=\"newMessageText\"\r\n            component={Textarea}\r\n            placeholder={\"Введите сообщение: \"}\r\n            /*validate={[required, maxLengthCreator(10), minLengthCreator(1)]}*/\r\n          />\r\n\r\n          <div>\r\n            <button onClick={props.onSendMessage}>Отправить</button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst User = (props) => {\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageText);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.item}>\r\n      <img\r\n        className={styles.avatar}\r\n        src=\"https://avatars.githubusercontent.com/u/94492515?v=4\"\r\n        alt=\"\"\r\n      />\r\n      <AddMessageForm onSubmit={addNewMessage} />\r\n      <div className={styles.message_area}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import {\r\n  sendMessage,\r\n} from \"../../../redux/dialogs-reducer\";\r\nimport User from \"./User\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    newMessageText: state.dialogsPage.newMessageText,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageText) => {\r\n      dispatch(sendMessage(newMessageText));\r\n    },\r\n  };\r\n};\r\n\r\nconst UserContainer = connect(mapStateToProps, mapDispatchToProps)(User);\r\n\r\nexport default UserContainer;\r\n","import React from \"react\";\r\nimport styles from \"./DialogItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst setActive = ({ isActive }) =>\r\n  isActive ? styles.activeLink : styles.Link;\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={styles.dialog}>\r\n      <NavLink to={path} className={setActive}>\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport styles from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport UserContainer from \"./User/UserContainer\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\n\r\nconst Dialogs = (props) => {\r\n  let dialogsElements = props.state.dialogs.map((d) => <DialogItem name={d.name} id={d.id} />);\r\n  let messagesElements = props.state.messages.map((m) => <Message message={m.message} />);\r\n  return (\r\n    <div className={styles.dialogs}>\r\n      <div className={styles.dialogsItems}>{dialogsElements}</div>\r\n      <UserContainer />\r\n      <div className=\"messages\">{messagesElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthNavigate } from \"./../../hoc/withAuthNavigate\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    state: state.dialogsPage,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  withAuthNavigate\r\n)(Dialogs);\r\n\r\n"],"sourceRoot":""}