{"version":3,"sources":["hoc/withRouter.js","hoc/withAuthNavigate.js","components/Dialogs/Dialogs.module.scss","components/Dialogs/Message/Message.module.css","components/Dialogs/User/User.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/User/User.jsx","components/Dialogs/User/UserContainer.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["withRouter","Component","props","params","useParams","navigate","useNavigate","mapStateToPropsForNavigate","state","isAuth","auth","withAuthNavigate","NavigateComponent","this","React","connect","module","exports","Message","className","styles","item","message","AddMessageForm","sendMessage","formik","useFormik","initialValues","validationSchema","Yup","max","min","required","onSubmit","values","console","log","handleSubmit","form_message","type","Input","handleChange","errors","formSummaryError","touched","User","profile","to","src","photos","large","userPhoto","alt","avatar","Preloader","UserContainer","compose","authorizedUserId","getAuthorizedUserId","getIsAuth","dispatch","newMessageText","getUserProfile","userId","DialogItem","path","id","dialog","Link","name","Dialogs","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsMain","isDark","dialogsItems_dark","dialogsItems_light","dialogsPage","settings"],"mappings":"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","file":"static/js/3.ae7e4120.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nexport const withRouter = (Component) => {\r\n  function ComponentWithRouter(props) {\r\n    return <Component {...props} params={useParams()} navigate={useNavigate()} />;\r\n  }\r\n  return ComponentWithRouter;\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n//import { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForNavigate = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport const withAuthNavigate = (Component) => {\r\n  class NavigateComponent extends React.Component {\r\n    render() {\r\n      /*if (!this.props.isAuth) {\r\n        return <Navigate to=\"/login\" />;\r\n      }*/\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  let ConnectedAuthNavigateComponent = connect(mapStateToPropsForNavigate)(NavigateComponent);\r\n  return ConnectedAuthNavigateComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3cP-q\",\"dialogsItems_dark\":\"Dialogs_dialogsItems_dark__1ezgc\",\"dialogsItems_light\":\"Dialogs_dialogsItems_light__1Q95c\",\"dialog\":\"Dialogs_dialog__EVirp\",\"messages\":\"Dialogs_messages__3jlKe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Message_item__27BAq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"User_item__GViAQ\",\"avatar\":\"User_avatar__2Co67\",\"form_message\":\"User_form_message__3t_5H\",\"formSummaryError\":\"User_formSummaryError__3gHAo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__1Q3Xp\",\"Link\":\"DialogItem_Link__3btdq\"};","import React from \"react\";\r\nimport styles from \"./Message.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={styles.item}>{props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport styles from \"./User.module.css\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Input } from \"../../Common/FormControls/FormControls\";\r\nimport { Link } from \"react-router-dom\";\r\nimport userPhoto from \"../../../assets/images/user.jpg\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\n\r\nconst AddMessageForm = ({ sendMessage }) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      message: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      message: Yup.string().max(100, \"Must be 100 or less\").min(3, \"Must be 3 or more\").required(\"Required\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      sendMessage(values.message);\r\n      console.log(values.message);\r\n      values.message = \"\";\r\n      console.log(values.message);\r\n    },\r\n  });\r\n  return (\r\n    <form onSubmit={formik.handleSubmit} className={styles.form_message}>\r\n      <div>\r\n        <button type=\"submit\">Send</button>\r\n      </div>\r\n      {Input(\"message\", \"text\", \"Введите сообщение:\", formik.values.message, formik.handleChange)}\r\n      {formik.errors.message ? (\r\n        <p className={styles.formSummaryError}>{formik.touched.message && formik.errors.message}</p>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst User = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div className={styles.item}>\r\n      <Link to=\"/profile\">\r\n        <img src={props.profile.photos.large || userPhoto} alt=\"\" className={styles.avatar} />\r\n      </Link>\r\n      <AddMessageForm {...props} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import { sendMessage } from \"../../../redux/dialogs-reducer\";\r\nimport User from \"./User\";\r\nimport { connect } from \"react-redux\";\r\nimport React from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { withRouter } from \"../../../hoc/withRouter\";\r\nimport { getAuthorizedUserId, getIsAuth } from \"../../../redux/profile-selector\";\r\nimport { getUserProfile } from \"../../../redux/profile-reducer\";\r\n\r\nclass UserContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <User sendMessage={this.props.sendMessage} profile={this.props.profile} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    authorizedUserId: getAuthorizedUserId(state), //?\r\n    isAuth: getIsAuth(state), //?\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageText) => {\r\n      dispatch(sendMessage(newMessageText));\r\n    },\r\n    getUserProfile: (userId) => {\r\n      dispatch(getUserProfile(userId));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withRouter)(UserContainer);\r\n","import React from \"react\";\r\nimport styles from \"./DialogItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={styles.dialog}>\r\n      <NavLink to={path} className={styles.Link}>\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport styles from \"./Dialogs.module.scss\";\r\nimport Message from \"./Message/Message\";\r\nimport UserContainer from \"./User/UserContainer\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\n\r\nconst Dialogs = (props) => {\r\n  let dialogsElements = props.state.dialogs.map((d) => <DialogItem name={d.name} id={d.id} />);\r\n  let messagesElements = props.state.messages.map((m) => <Message message={m.message} />);\r\n  return (\r\n    <div className={styles.dialogsMain}>\r\n      <div className={props.isDark ? styles.dialogsItems_dark : styles.dialogsItems_light}>{dialogsElements}</div>\r\n      <div className={styles.messages}>{messagesElements}</div>\r\n      <div className={styles.dialog}>\r\n        <UserContainer profile={props.profile} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthNavigate } from \"./../../hoc/withAuthNavigate\";\r\n\r\nlet DialogsContainer = (props) => {\r\n  return (\r\n    <div>\r\n      <Dialogs profile={props.profile} state={props.state} isDark={props.isDark} />\r\n    </div>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    state: state.dialogsPage,\r\n    isDark: state.settings.isDark,\r\n  };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps), withAuthNavigate)(DialogsContainer);\r\n"],"sourceRoot":""}